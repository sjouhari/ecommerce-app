services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.8.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - ecommerce-net

  kafka:
    image: confluentinc/cp-kafka:7.8.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - ecommerce-net

  registry-service:
    build:
      context: ./registry-service
    container_name: registry-service
    ports:
      - "8761:8761"
    networks:
      - ecommerce-net

  api-gateway:
    build:
      context: ./api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    depends_on:
      - registry-service
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://registry-service:8761/eureka
    networks:
      - ecommerce-net

  user-service:
    build:
      context: ./user-service
    container_name: user-service
    ports:
      - "8081:8081"
    depends_on:
      - registry-service
      - user-db
      - kafka
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://registry-service:8761/eureka
    networks:
      - ecommerce-net

  category-service:
    build:
      context: ./category-service
    container_name: category-service
    ports:
      - "8082:8082"
    depends_on:
      - registry-service
      - category-db
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://registry-service:8761/eureka
    networks:
      - ecommerce-net

  product-service:
    build:
      context: ./product-service
    container_name: product-service
    ports:
      - "8083:8083"
    depends_on:
      - registry-service
      - product-db
      - kafka
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://registry-service:8761/eureka
    networks:
      - ecommerce-net
    volumes:
      - product-images:/app/images

  comment-service:
    build:
      context: ./comment-service
    container_name: comment-service
    ports:
      - "8084:8084"
    depends_on:
      - registry-service
      - comment-db
      - kafka
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://registry-service:8761/eureka
    networks:
      - ecommerce-net

  inventory-service:
    build:
      context: ./inventory-service
    container_name: inventory-service
    ports:
      - "8085:8085"
    depends_on:
      - registry-service
      - inventory-db
      - kafka
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://registry-service:8761/eureka
    networks:
      - ecommerce-net

  order-service:
    build:
      context: ./order-service
    container_name: order-service
    ports:
      - "8086:8086"
    depends_on:
      - registry-service
      - order-db
      - kafka
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://registry-service:8761/eureka
    networks:
      - ecommerce-net

  contact-service:
    build:
      context: ./contact-service
    container_name: contact-service
    ports:
      - "8087:8087"
    depends_on:
      - registry-service
      - contact-db
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://registry-service:8761/eureka
    networks:
      - ecommerce-net

  email-service:
    build:
      context: ./email-service
    container_name: email-service
    ports:
      - "8088:8088"
    depends_on:
      - registry-service
      - kafka
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://registry-service:8761/eureka
    networks:
      - ecommerce-net

  # PostgreSQL databases (one per service)
  user-db:
    image: postgres:17
    container_name: user-db
    environment:
      POSTGRES_DB: user_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: user
    ports:
      - "5433:5432"
    volumes:
      - user-db-data:/var/lib/postgresql/data
    networks:
      - ecommerce-net

  category-db:
    image: postgres:17
    container_name: category-db
    environment:
      POSTGRES_DB: category_db
      POSTGRES_USER: category
      POSTGRES_PASSWORD: category
    ports:
      - "5434:5432"
    volumes:
      - category-db-data:/var/lib/postgresql/data
    networks:
      - ecommerce-net

  product-db:
    image: postgres:17
    container_name: product-db
    environment:
      POSTGRES_DB: product_db
      POSTGRES_USER: product
      POSTGRES_PASSWORD: product
    ports:
      - "5435:5432"
    volumes:
      - product-db-data:/var/lib/postgresql/data
    networks:
      - ecommerce-net

  comment-db:
    image: postgres:17
    container_name: comment-db
    environment:
      POSTGRES_DB: comment_db
      POSTGRES_USER: comment
      POSTGRES_PASSWORD: comment
    ports:
      - "5436:5432"
    volumes:
      - comment-db-data:/var/lib/postgresql/data
    networks:
      - ecommerce-net

  inventory-db:
    image: postgres:17
    container_name: inventory-db
    environment:
      POSTGRES_DB: inventory_db
      POSTGRES_USER: inventory
      POSTGRES_PASSWORD: inventory
    ports:
      - "5437:5432"
    volumes:
      - inventory-db-data:/var/lib/postgresql/data
    networks:
      - ecommerce-net

  order-db:
    image: postgres:17
    container_name: order-db
    environment:
      POSTGRES_DB: order_db
      POSTGRES_USER: order
      POSTGRES_PASSWORD: order
    ports:
      - "5438:5432"
    volumes:
      - order-db-data:/var/lib/postgresql/data
    networks:
      - ecommerce-net

  contact-db:
    image: postgres:17
    container_name: contact-db
    environment:
      POSTGRES_DB: contact_db
      POSTGRES_USER: contact
      POSTGRES_PASSWORD: contact
    ports:
      - "5439:5432"
    volumes:
      - contact-db-data:/var/lib/postgresql/data
    networks:
      - ecommerce-net

volumes:
  user-db-data:
  product-db-data:
  inventory-db-data:
  order-db-data:
  comment-db-data:
  category-db-data:
  contact-db-data:
  product-images:

networks:
  ecommerce-net:
    driver: bridge
